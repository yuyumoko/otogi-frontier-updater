name: Build and Release EXE

on:
  push:
    tags:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Python
        id: cache-python
        uses: actions/cache@v4
        with:
          path: C:\hostedtoolcache\windows\Python\3.11.5
          key: ${{ runner.os }}-python-3.11.5

      - name: Set up Python
        if: steps.cache-python.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.5"
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build EXE
        run: pyinstaller main.spec

      - name: Create zip package
        run: |
          Compress-Archive -Path dist\* -DestinationPath otogi-frontier-updater.zip

      - name: Archive the build
        uses: actions/upload-artifact@v4
        with:
          name: otogi-frontier-updater
          path: otogi-frontier-updater.zip

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "otogi-frontier-updater.zip"
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
